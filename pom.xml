<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>mymavenproject12</artifactId>
    <version>1.0.0</version>

    <properties>
        <maven.compiler.source>3.3.0</maven.compiler.source>
        <maven.compiler.target>3.10.1</maven.compiler.target>
        <maven.plugin.validation>VERBOSE</maven.plugin.validation>
    </properties>

    <dependencies>
        <!-- Add your project dependencies here -->
             import hudson.FilePath;
import hudson.remoting.VirtualChannel;
import jenkins.MasterToSlaveFileCallable;

import java.io.File;
import java.io.IOException;

class MyCallable extends MasterToSlaveFileCallable<Integer> {
    private final String arg;

    MyCallable(String arg) {
        this.arg = arg;
    }

    @Override
    public Integer invoke(File f, VirtualChannel channel) throws IOException, InterruptedException {
        return countThings(f, arg);
    }
}

class MyClass {
    int stuff(FilePath workspace, final String arg) throws IOException, InterruptedException {
        return workspace.act(new MyCallable(arg));
    }

    private int countThings(File file, String arg) {
        // Implementation for counting things in the file
        return 0;
    }
}

    </dependencies>

    <build>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <version>2.0.1</version>
            <executions>
                <execution>
                    <id>checkout</id>
                    <goals>
                        <goal>checkout</goal>
                    </goals>
                    <configuration>
                        <connectionUrl>scm:git:https://github.com/prajeet1000/docker-lamp-1.git</connectionUrl>
                        <checkoutDirectory>${project.build.directory}/checkout</checkoutDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>

</project>
